/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.virusdb;

import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;

import java.io.InputStreamReader;
import java.net.URL;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeSet;

/**
 *
 * @author gebruiker
 */
public class VirusDBGUI extends javax.swing.JFrame {

    /**
     * Creates new form VirusDBGUI
     */
    public VirusDBGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sortingButtonGroup = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        enterURLDialog = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        urlTextField = new javax.swing.JTextField();
        urlGoButton = new javax.swing.JButton();
        errorMessageLabel = new javax.swing.JLabel();
        viralClassLabel = new javax.swing.JLabel();
        viralClassCombo = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        sortingLabel = new javax.swing.JLabel();
        IdRadioButton = new javax.swing.JRadioButton();
        classRadioButton = new javax.swing.JRadioButton();
        numRadioButton = new javax.swing.JRadioButton();
        hostIDLabel1 = new javax.swing.JLabel();
        hostCombo1 = new javax.swing.JComboBox<>();
        hostIDLabel2 = new javax.swing.JLabel();
        hostCombo2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        hostList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        hostList2 = new javax.swing.JList<>();
        interesectLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        intersectList = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        selectFileMenu = new javax.swing.JMenuItem();
        fromURLMenu = new javax.swing.JMenuItem();

        fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        fileChooser.setFileHidingEnabled(true);
        fileChooser.setPreferredSize(new java.awt.Dimension(700, 500));

        enterURLDialog.setTitle("URL");
        enterURLDialog.setMinimumSize(new java.awt.Dimension(375, 109));
        enterURLDialog.setResizable(false);
        enterURLDialog.setSize(new java.awt.Dimension(375, 140));

        jLabel2.setText("Enter an URL:");

        urlTextField.setText("ftp://ftp.genome.jp/pub/db/virushostdb/virushostdb.tsv");
        urlTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                urlTextFieldKeyPressed(evt);
            }
        });

        urlGoButton.setText("Go");
        urlGoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlGoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout enterURLDialogLayout = new javax.swing.GroupLayout(enterURLDialog.getContentPane());
        enterURLDialog.getContentPane().setLayout(enterURLDialogLayout);
        enterURLDialogLayout.setHorizontalGroup(
            enterURLDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enterURLDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(enterURLDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(urlTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addGroup(enterURLDialogLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(enterURLDialogLayout.createSequentialGroup()
                        .addComponent(urlGoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(errorMessageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        enterURLDialogLayout.setVerticalGroup(
            enterURLDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enterURLDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(urlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(enterURLDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlGoButton)
                    .addComponent(errorMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Virus DB Compare");
        setResizable(false);

        viralClassLabel.setText("Viral Classification");

        viralClassCombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        viralClassCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        viralClassCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viralClassComboActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        sortingLabel.setText("Sorting");

        sortingButtonGroup.add(IdRadioButton);
        IdRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        IdRadioButton.setSelected(true);
        IdRadioButton.setText("Id");
        IdRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdRadioButtonActionPerformed(evt);
            }
        });

        sortingButtonGroup.add(classRadioButton);
        classRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        classRadioButton.setText("Classification");
        classRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classRadioButtonActionPerformed(evt);
            }
        });

        sortingButtonGroup.add(numRadioButton);
        numRadioButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        numRadioButton.setText("Number of hosts");
        numRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numRadioButtonActionPerformed(evt);
            }
        });

        hostIDLabel1.setText("Host ID");

        hostCombo1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hostCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hostCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostCombo1ActionPerformed(evt);
            }
        });

        hostIDLabel2.setText("Host ID");

        hostCombo2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hostCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hostCombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostCombo2ActionPerformed(evt);
            }
        });

        hostList1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hostList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                hostList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(hostList1);

        hostList2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hostList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                hostList2ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(hostList2);

        interesectLabel.setText("Corresponding genes");

        intersectList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                intersectListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(intersectList);

        jMenu1.setText("File");

        selectFileMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        selectFileMenu.setText("Open...");
        selectFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileMenuActionPerformed(evt);
            }
        });
        jMenu1.add(selectFileMenu);

        fromURLMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        fromURLMenu.setText("From URL...");
        fromURLMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromURLMenuActionPerformed(evt);
            }
        });
        jMenu1.add(fromURLMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(viralClassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(viralClassCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(sortingLabel)
                    .addComponent(IdRadioButton)
                    .addComponent(classRadioButton)
                    .addComponent(numRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(interesectLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(hostIDLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(hostCombo1, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hostIDLabel2)
                            .addComponent(hostCombo2, 0, 200, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viralClassLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viralClassCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(sortingLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IdRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numRadioButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hostIDLabel1)
                            .addComponent(hostIDLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hostCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hostCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1))))
                .addGap(39, 39, 39)
                .addComponent(interesectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2, jScrollPane3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileMenuActionPerformed
        loadDataMain(false, null);
    }//GEN-LAST:event_selectFileMenuActionPerformed

    private void fromURLMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromURLMenuActionPerformed
        enterURLDialog.setVisible(true);
    }//GEN-LAST:event_fromURLMenuActionPerformed

    private void numRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numRadioButtonActionPerformed
        setRadioOption("NUM");
    }//GEN-LAST:event_numRadioButtonActionPerformed

    private void classRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classRadioButtonActionPerformed
        setRadioOption("CLASS");
    }//GEN-LAST:event_classRadioButtonActionPerformed

    private void IdRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdRadioButtonActionPerformed
        setRadioOption("ID");
    }//GEN-LAST:event_IdRadioButtonActionPerformed

    private void hostList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_hostList1ValueChanged
        if (evt.getValueIsAdjusting()) {
            jListProcessing("List1");
        }
    }//GEN-LAST:event_hostList1ValueChanged

    private void hostList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_hostList2ValueChanged
        if (evt.getValueIsAdjusting()) {
            jListProcessing("List2");
        }
    }//GEN-LAST:event_hostList2ValueChanged

    private void intersectListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_intersectListValueChanged
        if (evt.getValueIsAdjusting()) {
            jListProcessing("Intersect");
        }
    }//GEN-LAST:event_intersectListValueChanged

    private void hostCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostCombo1ActionPerformed
        if (!loadingData) {
            hostComboOption("Box1");
            setIntersection();
        }
    }//GEN-LAST:event_hostCombo1ActionPerformed

    private void viralClassComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viralClassComboActionPerformed
        if (!loadingData) {
            viralClassComboSelection();
        }
    }//GEN-LAST:event_viralClassComboActionPerformed

    private void hostCombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostCombo2ActionPerformed
        if (!loadingData) {
            hostComboOption("Box2");
            setIntersection();
        }
    }//GEN-LAST:event_hostCombo2ActionPerformed

    private void urlGoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlGoButtonActionPerformed
        urlMain();
    }//GEN-LAST:event_urlGoButtonActionPerformed

    private void urlTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_urlTextFieldKeyPressed
        if (evt.getExtendedKeyCode() == 10) {
            urlMain();
        }
    }//GEN-LAST:event_urlTextFieldKeyPressed

    /**
     *
     *
     */
    private void loadDataMain(boolean url, InputStreamReader isp) {
        List<VirusObject> virusListInt;
        if (url) {
            virusListInt = VirusDBFunctions.processTSVFile(isp);
        } else {
            virusListInt = fileOpening();
        }

        if (virusListInt == null || virusListInt.isEmpty()) {
            System.out.println("some sort of error");
        } else {
            setViralClassComboItems(virusListInt);
            setHostComboItems(virusListInt, "Any");
            hostVirusses = VirusDBFunctions.getHostVirusMap(virusListInt);
            virusList = VirusDBFunctions.setNumOfHosts(virusListInt, hostVirusses);

            hostComboOption("Box1");
            hostComboOption("Box2");

            setIntersection();

            loadingData = false;
        }

    }

    /**
     *
     *
     */
    private void urlMain() {
        String url = urlTextField.getText();
        errorMessageLabel.setText("");

        boolean noError = true;
        try {
            errorMessageLabel.setText("Loading. Please wait.");
            URL website = new URL(url);
            InputStreamReader inputRead = new InputStreamReader(website.openStream());
            loadDataMain(true, inputRead);
            noError = true;
        } catch (IOException exc) {
            errorMessageLabel.setText("There was a problem with the url.");
            noError = false;
        }

        if (noError) {
            enterURLDialog.setVisible(false);
        }

    }

    /**
     *
     *
     */
    private void hostComboOption(String option) {
        if (option.equals("Box1")) {
            int hostID = Integer.parseInt(hostCombo1.getSelectedItem().toString().split(";")[0]);
            hostVirusList1 = VirusDBFunctions.getHostVirusIDs(hostVirusses, hostID);
            List<VirusObject> sortedHostVirusList1 = VirusDBFunctions.getSortedVirusIDs(hostVirusList1, radioOption);
            setJListData(sortedHostVirusList1, "L1");

        } else {
            int hostID = Integer.parseInt(hostCombo2.getSelectedItem().toString().split(";")[0]);
            hostVirusList2 = VirusDBFunctions.getHostVirusIDs(hostVirusses, hostID);
            List<VirusObject> sortedHostVirusList2 = VirusDBFunctions.getSortedVirusIDs(hostVirusList2, radioOption);
            setJListData(sortedHostVirusList2, "L2");

        }
    }

    /**
     *
     *
     */
    private void setJListData(List<VirusObject> sortedList, String option) {
        String[] listData = VirusDBFunctions.convertVirusObjecttoStringArray(sortedList);

        if (option.equals("L1")) {
            hostList1.setListData(listData);
        } else if (option.equals("L2")) {
            hostList2.setListData(listData);
        } else {
            intersectList.setListData(listData);
        }
    }

    /**
     *
     *
     */
    private void setJListDataInter(List<Integer> sortedList, String option) {
        String[] listData = sortedList.stream().map(num -> num.toString()).toArray(String[]::new);

        if (option.equals("L1")) {
            hostList1.setListData(listData);
        } else if (option.equals("L2")) {
            hostList2.setListData(listData);
        } else {
            intersectList.setListData(listData);
        }
    }

    /**
     *
     *
     */
    private void viralClassComboSelection() {
        loadingData = true;
        String choice = viralClassCombo.getSelectedItem().toString();
        setHostComboItems(virusList, choice);
        loadingData = false;
    }

    /**
     *
     *
     */
    private void setViralClassComboItems(List<VirusObject> virusListInt) {
        viralClassCombo.removeAllItems();
        List<String> virusClasses = VirusDBFunctions.getVirusClasses(virusListInt);
        Collections.sort(virusClasses);

        viralClassCombo.addItem("Any");
        for (String classification : virusClasses) {
            viralClassCombo.addItem(classification);
        }
    }

    /**
     *
     *
     */
    private void setHostComboItems(List<VirusObject> virusListInt, String option) {
        hostCombo1.removeAllItems();
        hostCombo2.removeAllItems();

        Map<Integer, String> hostsMap = VirusDBFunctions.getHostComboItems(virusListInt, option);

        SortedSet<Integer> hostsSet = new TreeSet<>(hostsMap.keySet());

        for (Integer item : hostsSet) {
            String contents = String.format("%s; (%s)", item.toString(), hostsMap.get(item));

            hostCombo1.addItem(contents);
            hostCombo2.addItem(contents);
        }

    }

    /**
     *
     *
     */
    private List<VirusObject> fileOpening() {
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                // What to do with the file
                return VirusDBFunctions.processTSVFile(file);
            } catch (Exception ex) {
                System.out.println(String.format("fileopening: %s", ex));
                return null;
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
        return null;
    }

    /**
     * 
     *  
     */
    private void jListProcessing(String option) {

        String listValue;

        if (option.equals("List1")) {
            listValue = hostList1.getSelectedValue();
        } else if (option.equals("List2")) {
            listValue = hostList2.getSelectedValue();
        } else {
            listValue = intersectList.getSelectedValue();
        }

        String url = String.format("https://www.genome.jp/virushostdb/%s", listValue);

        if (runs > 0) {
            webPageVisual.showWebPage(url, "VirusDB Web Interface", false);
        } else {
            webPageVisual.showWebPage(url, "VirusDB Web Interface", true);
        }

        runs++;

    }

    /**
     *
     *
     */
    private void setRadioOption(String option) {
        loadingData = true;
        radioOption = option;
        sortRadioOptions(option);

        loadingData = false;

    }

    /**
     *
     *
     */
    private void sortRadioOptions(String option) {
        List<VirusObject> sortedList1 = VirusDBFunctions.getSortedVirusIDs(hostVirusList1, option);
        setJListData(sortedList1, "L1");

        List<VirusObject> sortedList2 = VirusDBFunctions.getSortedVirusIDs(hostVirusList2, option);
        setJListData(sortedList2, "L2");

        List<Integer> intersectData = VirusDBFunctions.getIntersection(sortedList1, sortedList2);
        //List<VirusObject> intersection = VirusDBFunctions.getSortedVirusIDs(intersectData, option);
        setJListDataInter(intersectData, "Intersect");
    }

    /**
     *
     *
     */
    private void setIntersection() {
        List<Integer> intersectData = VirusDBFunctions.getIntersection(hostVirusList1, hostVirusList2);
        //Collections.sort(intersectData);
        setJListDataInter(intersectData, "Intersect");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VirusDBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VirusDBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VirusDBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VirusDBGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                virusGUI = new VirusDBGUI();
                virusGUI.setVisible(true);
            }
        });
    }

    /**
     *
     */
    protected static void resetRuns() {
        virusGUI.resRuns();
    }

    /**
     *
     */
    private void resRuns() {
        runs = 0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton IdRadioButton;
    private javax.swing.JRadioButton classRadioButton;
    private javax.swing.JDialog enterURLDialog;
    private javax.swing.JLabel errorMessageLabel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenuItem fromURLMenu;
    private javax.swing.JComboBox<String> hostCombo1;
    private javax.swing.JComboBox<String> hostCombo2;
    private javax.swing.JLabel hostIDLabel1;
    private javax.swing.JLabel hostIDLabel2;
    private javax.swing.JList<String> hostList1;
    private javax.swing.JList<String> hostList2;
    private javax.swing.JLabel interesectLabel;
    private javax.swing.JList<String> intersectList;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton numRadioButton;
    private javax.swing.JMenuItem selectFileMenu;
    private javax.swing.ButtonGroup sortingButtonGroup;
    private javax.swing.JLabel sortingLabel;
    private javax.swing.JButton urlGoButton;
    private javax.swing.JTextField urlTextField;
    private javax.swing.JComboBox<String> viralClassCombo;
    private javax.swing.JLabel viralClassLabel;
    // End of variables declaration//GEN-END:variables

    private String radioOption = "ID";
    private List<VirusObject> virusList = null;
    private Map<Integer, List<VirusObject>> hostVirusses = null;

    private List<VirusObject> hostVirusList1;
    private List<VirusObject> hostVirusList2;

    private boolean loadingData = true;

    private int runs = 0;
    private static VirusDBGUI virusGUI;

}
